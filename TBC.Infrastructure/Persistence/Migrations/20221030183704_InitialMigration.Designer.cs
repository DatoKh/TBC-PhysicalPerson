// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBC.Infrastructure.Persistence.Context;

namespace TBC.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20221030183704_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TBC.Domain.Entities.CityAggregate.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities", "dbo");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("People", "dbo");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PhoneNumberType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.RelatedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("MainPersonId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedPersonnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainPersonId");

                    b.HasIndex("RelatedPersonnId");

                    b.ToTable("RelatedPeople", "dbo");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.Person", b =>
                {
                    b.HasOne("TBC.Domain.Entities.CityAggregate.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.PhoneNumber", b =>
                {
                    b.HasOne("TBC.Domain.Entities.PersonAggregate.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.RelatedPerson", b =>
                {
                    b.HasOne("TBC.Domain.Entities.PersonAggregate.Person", "MainPerson")
                        .WithMany("MainPersonRelatedPeople")
                        .HasForeignKey("MainPersonId");

                    b.HasOne("TBC.Domain.Entities.PersonAggregate.Person", "RelatedPersonn")
                        .WithMany("RelatedPersonRelatedPeople")
                        .HasForeignKey("RelatedPersonnId");

                    b.Navigation("MainPerson");

                    b.Navigation("RelatedPersonn");
                });

            modelBuilder.Entity("TBC.Domain.Entities.CityAggregate.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("TBC.Domain.Entities.PersonAggregate.Person", b =>
                {
                    b.Navigation("MainPersonRelatedPeople");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("RelatedPersonRelatedPeople");
                });
#pragma warning restore 612, 618
        }
    }
}
